---

# Avoid getting the VIP address from the DHCP server
# if not available during installation
- name: Set DNS servers
  ansible.builtin.lineinfile:
    line: 'supersede domain-name-servers {{ setup_dns | join(", ") }};'
    path: /etc/dhcp/dhclient.conf
  notify: reload dhclient

- name: Flush handlers
  meta: flush_handlers

- name: Update apt packages
  ansible.builtin.apt:
    force_apt_get: yes
    autoclean: yes
    autoremove: yes
    update_cache: yes
    upgrade: dist

- name: Check if reboot is needed
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: reboot_required

- name: Install dependencies
  ansible.builtin.apt:
    force_apt_get: yes
    name:
      - docker-compose
      - git
      - rsync
      - qemu-guest-agent
      - firewalld

- name: Add user to docker group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    append: yes
    groups: docker

- name: Set firewalld default zone to dmz
  ansible.builtin.command: firewall-cmd --set-default-zone dmz
  register: _cmd
  changed_when: _cmd.stderr | length == 0

- name: Allow only internal trafic
  ansible.posix.firewalld:
    source: '{{ item }}'
    zone: internal
    state: enabled
    permanent: yes
  loop: '{{ setup_firewall_zones }}'
  notify: reload firewalld

- name: Allow VRRP for keepalived
  ansible.posix.firewalld:
    zone: internal
    rich_rule: rule protocol value="vrrp" accept
    permanent: yes
    state: enabled
  notify: reload firewalld

- name: permit pihole (dns and http)
  ansible.posix.firewalld:
    service: '{{ item }}'
    zone: internal
    permanent: yes
    state: enabled
  loop:
    - dns
    - http
  notify: reload firewalld

- name: Reboot
  ansible.builtin.reboot:
  when: reboot_required.stat.exists